<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.11.4/jquery-ui.min.js"></script>
<!-- Attach CSS for step through tutorial tool -->
<script src="~/Scripts/bootstrap-tour-standalone.min.js"></script>
<link href="~/Content/bootstrap-tour-standalone.min.css" rel="stylesheet" />

<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer></script>

<script>

    $(function () {
        $("#q").autocomplete({
            source: "/home/suggest",
            minLength: 2,
            select: function (event, ui) {
                Search();
            }
        });

        

    });

    var typeFacet, sourceFacet, peopleFacet, organizationsFacet, locationsFacet, keyphrasesFacet, languageFacet;

    var sortType, currentPage;
    currentPage = 1;
  
    var pinLayer, infoboxLayer;
    var pinInfobox = null;
    var infoboxLayer;
    var pinLayer;

  
    function Search() {
        $("#job_details_div").html("Loading...");
        var q = $("#q").val();
        // Get center of map to use to score the search results
        $.post('/home/search',
            {
                q: q,
                typeFacet: typeFacet,
                sourceFacet: sourceFacet,
                peopleFacet: peopleFacet,
                sortType: sortType,
                organizationsFacet: organizationsFacet,
                locationsFacet: locationsFacet,
                currentPage: currentPage,
                keyphrasesFacet: keyphrasesFacet,
                languageFacet: languageFacet
            },
            function (data) {
                UpdateTypeFacets(data.Facets.type);
                UpdateSourceTypeFacets(data.Facets.source);
                UpdateKeyPhraseFacets(data.Facets.keyphrases);
                UpdateLanguageFacets(data.Facets.language);
                UpdatePeopleFacets(data.Facets.people);
                UpdateOrganizationsFacets(data.Facets.organizations);
                UpdateLocationsFacets(data.Facets.locations);
                UpdateJobDetails(data.Results);
                UpdatePagination(data.Count);            
                UpdateFilterReset();
            });

    }

    function UpdateFilterReset() {
        // This allows users to remove filters
        var htmlString = '';

        if ((typeFacet) || (sourceFacet) || (peopleFacet) || (organizationsFacet) || (keyphrasesFacet) || (locationsFacet) || (languageFacet)) {
            htmlString += '<b>Current Filters:</b><br>';
            if (typeFacet)
                htmlString += typeFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'typeFacet\')">X</a>]<br>';
            if (sourceFacet )
                htmlString += sourceFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'sourceFacet\')">X</a>]<br>';
            if (organizationsFacet )
                htmlString += organizationsFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'organizationsFacet\')">X</a>]<br>';
            if (keyphrasesFacet)
                htmlString += keyphrasesFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'keyphrasesFacet\')">X</a>]<br>';
            if (peopleFacet)
                htmlString += peopleFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'peopleFacet\')">X</a>]<br>';
            if (locationsFacet)
                htmlString += locationsFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'locationFacet\')">X</a>]<br>';
            if (languageFacet)
                htmlString += languageFacet + ' [<a href="javascript:void(0)" onclick="RemoveFacet(\'languageFacet\')">X</a>]<br>';          
        }
        $("#filterReset").html(htmlString);
    }

    function RemoveFacet(facet) {
        // Remove a facet
        if (facet == "typeFacet")
            typeFacet = '';
        if (facet == "sourceFacet")
            sourceFacet = '';
        if (facet == "peopleFacet")
            peopleFacet = '';
        if (facet == "organizationsFacet")
            organizationsFacet = '';
        if (facet == "keyphrasesFacet")
            keyphrasesFacet = '';
        if (facet == "languageFacet")
            languageFacet = '';
        if (facet == "locationsFacet")
            locationsFacet = '';

        Search();
    }


    function UpdatePagination(docCount) {
        // Update the pagination
        var totalPages = Math.round(docCount / 10);
        // Set a max of 5 items and set the current page in middle of pages
        var startPage = currentPage;
        if ((startPage == 1) || (startPage == 2))
            startPage = 1;
        else
            startPage -= 2;

        var maxPage = startPage + 5;
        if (totalPages < maxPage)
            maxPage = totalPages + 1;
        var backPage = parseInt(currentPage) - 1;
        if (backPage < 1)
            backPage = 1;
        var forwardPage = parseInt(currentPage) + 1;

        var htmlString = '<li><a href="javascript:void(0)" onclick="GoToPage(\'' + backPage + '\')" class="fa fa-angle-left"></a></li>';
        for (var i = startPage; i < maxPage; i++) {
            if (i == currentPage)
                htmlString += '<li  class="active"><a href="#">' + i + '</a></li>';
            else
                htmlString += '<li><a href="javascript:void(0)" onclick="GoToPage(\'' + parseInt(i) + '\')">' + i + '</a></li>';
        }

        htmlString += '<li><a href="javascript:void(0)" onclick="GoToPage(\'' + forwardPage + '\')" class="fa fa-angle-right"></a></li>';
        $("#pagination").html(htmlString);
        $("#paginationFooter").html(htmlString);


    }

    function GoToPage(page) {
        currentPage = page;
        Search();
    }
    ///Item Type
    function UpdateTypeFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseItemTypeFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#type_facets").html(facetResultsHTML);
    }

    function ChooseItemTypeFacet(facet) {
        typeFacet = facet;
        Search();
    }
    ///KeyPhrase
    function UpdateKeyPhraseFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseKeyPhrasesFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#keyphrases_facets").html(facetResultsHTML);
    }
    function ChooseKeyPhrasesFacet(facet) {
        keyphrasesFacet = facet;
        Search();
    }


    function UpdateLanguageFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseLanguageFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#language_facets").html(facetResultsHTML);
    }

    function ChooseLanguageFacet(facet) {
        languageFacet = facet;
        Search();
    }

    function UpdateLocationsFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseLocationFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#locations_facets").html(facetResultsHTML);
    }

    function ChooseLocationFacet(facet) {
        locationsFacet = facet;
        Search();
    }

    function UpdateSourceTypeFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseSourceTypeFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#source_facets").html(facetResultsHTML);
    }

    function ChooseSourceTypeFacet(facet) {
        sourceFacet = facet;
        Search();
    }

    function UpdateOrganizationsFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChooseOrganizationsFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#organizations_facets").html(facetResultsHTML);
    }

    function ChooseOrganizationsFacet(facet) {
        organizationsFacet = facet;
        Search();
    }


    function UpdatePeopleFacets(data) {
        var facetResultsHTML = '';
        for (var i = 0; i < data.length; i++) {
            facetResultsHTML += '<li><a href="javascript:void(0)" onclick="ChoosePeopleFacet(\'' + data[i].Value + '\');">' + data[i].Value + ' (' + data[i].Count + ')</span></a></li>';
        }

        $("#people_facets").html(facetResultsHTML);
    }

    function ChoosePeopleFacet(facet) {
        peopleFacet = facet;
        Search();
    }



    function setSortType() {
        sortType = $("#cmbSortType").val();
        Search();
    }


    function UpdateJobDetails(data) {
        var jobDetailsHTML = '';
        var imgCounter = 0;
       
        $("#available-jobs-label").html('Available Jobs <small>(' + data.Count + " jobs)</small>");
        $("#jobs-count").html(data.Count);

        $("#available_jobs_subheader").html(data.Count + ' Available Jobs');

        for (var i = 0; i < data.length; i++) {

            jobDetailsHTML += '<div class="jobs-item with-thumb">';
            imgCounter++;
            if (imgCounter == 10)
                imgCounter = 0;
            //jobDetailsHTML += '<div class="thumb"><img src="/images/content/bus-0' + imgCounter + '.png" alt=""></div>';
            jobDetailsHTML += '<div class="clearfix visible-xs"></div>';

            var type = data[i].Document.type
            var url = data[i].Document.url
            switch (data[i].Document.type) {
                case "youtube#video":
                    type = "Video"
                    url = "https://www.youtube.com/watch?v=" + data[i].Document.url
                    break;
                default:
                    
                    
            }
            jobDetailsHTML += '<h6 class="title"><a href="'+url+'" target="_blank">' + data[i].Document.title + '</a></h6>';
            var itemDescription = data[i].Document.description;
            if (data[i].Highlights != null)
                itemDescription = data[i].Highlights.description
            jobDetailsHTML += '<p class="description">' + itemDescription + '</p>';
            jobDetailsHTML += '<span class="meta"> data type : ' + type + '</span>';
            jobDetailsHTML += '<span class="meta"> keyphrases : ' + data[i].Document.keyphrases + '</span>';
            jobDetailsHTML += '</div>';
            jobDetailsHTML += '</div>';

        }

        $("#job_details_div").html(jobDetailsHTML);
    }

</script>
<div class="container">
    <div class="row">
        <div class="col-sm-4 page-sidebar">
            <aside>
                <div class="sidebar-container">
                    <div class="widget sidebar-widget jobs-search-widget">
                        <h5 class="widget-title" id="title">Search</h5>
                        <div class="widget-content clearfix">
                            <div id="remote">
                                <input class="form-control walkthrough-1" type="text" id="q" placeholder="Search Data">
                                
                                <input type="submit" class="search-submit" value=" " onclick="Search();">
                            </div>
                        </div>
                    </div>
                    <div class="widget sidebar-widget jobs-filter-widget">
                        <h5 class="widget-title">Filter Results</h5>
                        <p id="filterReset"></p>
                        <div class="widget-content">
                            <h6 id="businessTitleFacetTitle">Content Type</h6>
                            <ul class="filter-list" id="type_facets"></ul>
                            <h6>Content Source</h6>
                            <ul class="filter-list" id="source_facets"></ul>
                            <h6>Key Phrases</h6>
                            <ul class="filter-list" id="keyphrases_facets"></ul>
                            <h6>Organizations</h6>
                            <ul class="filter-list" id="organizations_facets"></ul>
                            <h6>People</h6>
                            <ul class="filter-list" id="people_facets"></ul>
                            <h6>Locations</h6>
                            <ul class="filter-list" id="locations_facets"></ul>
                            <h6>Languages</h6>
                            <ul class="filter-list" id="language_facets"></ul>
                        </div>
                    </div>
                </div>
            </aside>
        </div> <!-- end .page-sidebar -->
        <div class="col-sm-8 page-content">
         
            <h3><span class="jobs-count" id="jobs-count"></span> Available Content</h3>
            <div class="clearfix">
                <select class="form-control pull-left" id="cmbSortType" onchange="setSortType();">
                    <option value="featured">Relevance</option>
                    <option value="salaryDesc">Type (z-a)</option>
                    <option value="salaryIncr">Source (z-a)</option>
                </select>
                <ul id="pagination" class="pagination pull-right"></ul>
            </div>
            <div id="job_details_div">
            </div>
            <div class="clearfix">
                <ul id="paginationFooter" class="pagination pull-right"></ul>
            </div>
        </div> <!-- end .page-content -->
    </div> <!-- end .container -->
</div> <!-- end .row -->
